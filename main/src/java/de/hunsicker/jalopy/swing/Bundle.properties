BDR_ALIGN = Align
BDR_ARRAYS = Arrays
BDR_BACKUP = Backup
BDR_BLANK_LINES = Blank Lines
BDR_CATEGORIES = Categories
BDR_CHUNKS = Chunks
BDR_COMPLIANCE = Compliance
BDR_CONTINUATION_INDENT = Continuation
BDR_CONVENTION = Convention
BDR_DELETE_FOOTERS = Delete Footers
BDR_DELETE_HEADERS = Delete Headers
BDR_DESCRIPTIONS = Descriptions
BDR_EMPTY_BRACES = Empty braces
BDR_FIELDS = Fields
BDR_FILL_CHARACTER = Fill Character
BDR_FORMAT = Format
BDR_GENERAL = General
BDR_GENERATION = Generation
BDR_HISTORY = History
BDR_INDENTATION_POLICY = Policy
BDR_INLINE_TAGS = In-line Tags
BDR_INSERT_BRACES = Insert braces
BDR_LOCAL_VARS = Local Variables
BDR_METHODS = Methods
BDR_MISC = Misc
BDR_OPTIMIZE = Optimization
BDR_ORDERING = Ordering
BDR_PARAMS = Parameters
BDR_REMOVE = Remove
BDR_REMOVE_BRACES = Remove braces
BDR_SIZES = Sizes
BDR_SPACE_AFTER = Space after
BDR_SPACE_AROUND = Space around
BDR_SPACE_BEFORE = Space before
BDR_STANDARD_TAGS = Standard Tags
BDR_STYLES = Styles
BDR_THREADS = Threads
BDR_TIPS = Tips
BDR_WHITESPACE = White Space
BDR_WRAPPING = Wrapping
BDR_WRAP_ALL = Wrap always when exceed
BDR_WRAP_ALWAYS = Wrap always
BDR_WRAP_POLICY = Policy
BTN_ACTIVATE = Ac&tivate
BTN_ADD = &Add
BTN_APPLY = Apply
BTN_CANCEL = Cancel
BTN_CHANGE = &Change...
BTN_CHOOSE = Ch&oose...
BTN_DLG_ADD = &Add...
BTN_DLG_BROWSE = &Browse...
BTN_DLG_VIEW = &View...
BTN_DOWN = &Down
BTN_EXPORT = &Export...
BTN_IMPORT = &Import...
BTN_OK = OK
BTN_REMOVE = &Remove
BTN_STOP = Stop
BTN_TEST = Test
BTN_UP = &Up
CHK_ADD_SEPARATOR_COMMENTS = Add separator comments
CHK_ADD_SEPARATOR_COMMENTS_FOR_INNER = Add separator comments for inner classes
CHK_AFTER_EXTENDS_TYPES = After extends types
CHK_AFTER_IMPLEMENTS_TYPES = After implements types
CHK_AFTER_THROWS_TYPES = After throws types
CHK_BEFORE_EXTENDS_KEYWORD = Before extends keyword
CHK_BEFORE_IMPLEMENTS_KEYWORD = Before implements keyword
CHK_BEFORE_THROWS_KEYWORD = Before throws keyword
CHK_BLOCKS = Blocks
CHK_BRACES = Braces
CHK_BRACKETS = Brackets
CHK_BRACKETS_AFTER_IDENTIFIER = Array brackets after identifer
CHK_BRACKETS_TYPES = Brackets in Types
CHK_BY_BLANK_LINES = By blank lines
CHK_BY_COMMENTS = By comments
CHK_CASE_COLON = Case colon
CHK_CAST = Type cast
CHK_COLLAPSE = Collapse single-type imports
CHK_COMMA = Comma
CHK_CONTINUATION_INDENT_BLOCKS = Blocks
CHK_CONTINUATION_INDENT_OPERATORS = Operators
CHK_CORRECT_TAGS = Correct tags
CHK_CORRECT_THROWS_TAGS = Correct @throws tags
CHK_CUDDLE = Cuddle braces
CHK_CUSTOM_STYLE = Custom style
CHK_C_STYLE = C style
CHK_DEEP_INDENT = Deep indent
CHK_DO_WHILE = do...while
CHK_ENABLE_INSPECTOR = Enable Code Inspector
CHK_EXPAND = Expand on-demand imports
CHK_EXTENDS_INDENT = Extends indent:
CHK_FIELD_COMMENTS_IN_SINGLE_LINE = Field comments in single line
CHK_FOR = for
CHK_FORCE_FORMATTING = Force formatting
CHK_GNU_STYLE = GNU style
CHK_IF_ELSE = if...else
CHK_IMPLEMENTS_INDENT = Implements indent:
CHK_INCLUDE_INNER = Include inner classes
CHK_INDENT_CASE_SWITCH = Indent "case" from "switch"
CHK_INDENT_FIRST_COLUMN = Indent first column comments
CHK_INDENT_LABELS = Indent labels
CHK_INSERT_EMPTY = Insert empty statement
CHK_INSERT_LOGGING_CONDITIONAL = Insert logging conditonal
CHK_INSERT_PARENTHESES = Insert expression parentheses
CHK_INSERT_SERIAL_UID = Insert serial version UID
CHK_INSERT_TRAILING_NEWLINE = Insert trailing newline
CHK_JAVADOC = Javadoc comments
CHK_LABELS = Labels
CHK_METHOD_CALL_CHAINED = Method call chains
CHK_METHOD_CALL_PARAM = Method call parameters
CHK_METHOD_CALL_PARAM_NESTED = Method call parameters if nested
CHK_METHOD_CALL_PARENTHESES = Method call parentheses
CHK_METHOD_PARAM = Method declaration parameters
CHK_METHOD_PARENTHESES = Method declaration parentheses
CHK_MULTI_LINE = Multi-line comments
CHK_NEGATION = Negation
CHK_NEWLINE_AFTER_RIGHT = Newline after right brace
CHK_NEWLINE_BEFORE_LEFT = Newline before left brace
CHK_NEWLINE_BEFORE_LEFT_WRAPPED = Treat class/method blocks different if wrapped
CHK_NEWLINE_BEFORE_RIGHT = Newline before right brace
CHK_OPERATOR_ASSIGN = Assigment operators
CHK_OPERATOR_BITWISE = Bitwise operators
CHK_OPERATOR_LOGICAL = Logical operators
CHK_OPERATOR_MATHEMATICAL = Mathematical operators
CHK_OPERATOR_RELATIONAL = Relational operators
CHK_OPERATOR_SHIFT = Shift operators
CHK_PARENTHESES = Parentheses
CHK_PARENTHESES_CAST = Type cast parentheses
CHK_PARSE_COMMENTS = Parse/Format comments
CHK_SEMI = Semicolon
CHK_SHOW_STACKTRACE = Show Stacktrace
CHK_SINGLE_LINE = Single-line comments
CHK_SORT_CLASS_ELEMENTS = Sort class elements
CHK_SORT_IMPORTS = Sort import statements
CHK_SORT_MODIFIERS = Sort modifiers
CHK_STANDARD_INDENT = Standard indent
CHK_STATEMENT_PARENTHESES = Statement parentheses
CHK_SUN_STYLE = Sun Java style
CHK_TERNARY_EXPR = Ternary expressions
CHK_TERNARY_EXPRESSION_COLON = Ternary expression :
CHK_TERNARY_EXPRESSION_QUESTIONMARK = Ternary expression ?
CHK_THROWS_INDENT = Throws indent:
CHK_TREAT_DIFFERENT = Treat class/method blocks different
CHK_USE_FOOTER = Use Footer
CHK_USE_HEADER = Use Header
CHK_USE_HISTORY_COMMENT = Use history comments
CHK_USE_HISTORY_FILE = Use history file
CHK_USE_LEADING_TABS = Use only leading tabs
CHK_USE_TABS = Use tabs to indent
CHK_VAR_ASSIGN = Variable assignments
CHK_VAR_IDENT = Variable identifiers
CHK_WHILE = while
CHK_WRAP_AFTER_ASSIGN = Wrap after assignments
CHK_WRAP_AFTER_ELEMENT = Wrap after element
CHK_WRAP_AFTER_LEFT_PAREN = Wrap after left parenthesis
CHK_WRAP_AFTER_OPERATOR = Wrap after operators
CHK_WRAP_ALL_EXTENDS_TYPES_IF_FIRST = After extends types
CHK_WRAP_ALL_IMPLEMENTS_TYPES_IF_FIRST = After implements types
CHK_WRAP_ALL_PARAM_IF_FIRST = After parameters/expressions
CHK_WRAP_ALL_THROWS_TYPES_IF_FIRST = After throws types
CHK_WRAP_AS_NEEDED = Wrap as needed
CHK_WRAP_BEFORE_OPERATOR = Wrap before operators
CHK_WRAP_BEFORE_RIGHT_PAREN = Wrap after right parenthesis
CHK_WRAP_GROUPING = Wrap grouping parentheses
CHK_WRAP_LINES = Wrap lines
CMB_DEEP_INDENT = Deep indent:
CMB_LINE_LENGTH = Line length:
CMB_NUMBER = Number:
HDR_DEPTH = Depth
HDR_PACKAGE = Package
HDR_SORT = Sort
HDR_TYPE = Type
LBL_ADD_IDENTIFY_KEY = Enter new key:
LBL_AFTER = After:
LBL_AFTER_RIGHT_BRACE = After right brace:
LBL_BACKUP_DIRECTORY = Directory:
LBL_BACKUP_LEVEL = Level:
LBL_BACKUP_PLURAL = Backups
LBL_BACKUP_SINGULAR = Backup
LBL_BEFORE = Before:
LBL_BEFORE_LEFT_BRACE = Before left brace:
LBL_BEFORE_RIGHT_BRACE = Before right brace:
LBL_BINARY_CONVENTION = Binary Code Convention (*.jal)
LBL_BLANK_LINES = Blank Lines
LBL_BLANK_LINES_AFTER = Blank lines after:
LBL_BLANK_LINES_AFTER_LEFT = Blank lines after left curly brace:
LBL_BLANK_LINES_BEFORE = Blank lines before:
LBL_BLANK_LINES_BEFORE_RIGHT = Blank lines before right curly brace:
LBL_BLOCKS = Blocks
LBL_BOTTOM = Bottom:
LBL_BRACES = Braces
LBL_CASE_BLOCKS = Case blocks
LBL_CAT_GENERAL = General:
LBL_CAT_PARSER = Parser:
LBL_CAT_PARSER_JAVADOC = Parser Javadoc:
LBL_CAT_PRINTER = Printer:
LBL_CAT_PRINTER_JAVADOC = Printer Javadoc:
LBL_CAT_TRANSFORM = Transformer:
LBL_CHARACTER = Character:
LBL_CLASSES = Classes
LBL_CLASSES_INTERFACES = Classes/Interfaces
LBL_COMMENTS = Comments
LBL_COMPATIBILITY = Source compatibility:
LBL_CONSTRUCTORS = Constructors
LBL_CONTINUATION_INDENT = Continuation indent:
LBL_CONTROL = Control statements
LBL_COUNT = Counter
LBL_CTORS = Constructors:
LBL_DECLARATIONS = Declarations
LBL_DEFAULT_GROUPING_DEPTH = Default grouping depth:
LBL_DESCRIPTION = Description:
LBL_ENTER_NAME = Enter tag name:
LBL_ENVIRONMENT = Environment
LBL_ERRORS = Errors
LBL_EXCEPTION = Exception:
LBL_FIELDS = Fields
LBL_FILES = Files
LBL_FOOTER = Footer
LBL_GENERAL = General
LBL_GENERAL_INDENT = General indent:
LBL_HEADER = Header
LBL_IMPORTS = Imports
LBL_INDENTATION = Indentation
LBL_INSPECTOR = Code Inspector
LBL_INSTANCE_INITS = Instance initializers:
LBL_INSTANCE_VARS = Instance variables:
LBL_INTERFACES = Interfaces
LBL_INVALID_PATTERN = ERROR: Invalid Pattern
LBL_JAVADOC = Javadoc
LBL_JAVADOC_COMMENTS = Javadoc comments
LBL_JAVA_SOURCE_FILES = Java source files (*.java)
LBL_KEEP_BLANK_LINES = Keep blank lines up to:
LBL_LABELS = Labels
LBL_LAST_IMPORT = Last import statement
LBL_LEADING_INDENT = Leading indent:
LBL_LOCAL_VARIABLE = Local Variables
LBL_MESSAGES = Messages
LBL_METHODS = Methods
LBL_MISC = Misc
LBL_MULTI_LINE = Multi-line comments
LBL_NAME = Name:
LBL_NAMING = Naming
LBL_OPEN = Open:
LBL_ORIGINAL_TAB = Original Tab indent:
LBL_PACKAGE = Package statement
LBL_PACKAGES = Packages
LBL_PARAMETER = Parameter
LBL_PARAMS = Parameters
LBL_PATTERN = Pattern:
LBL_PATTERN_DOES_NOT_MATCH = Pattern does not match!
LBL_PATTERN_MATCHES = Pattern matches.
LBL_PRINTER = Printer
LBL_PROJECTS = Projects
LBL_RETURN = Return:
LBL_SEPARATION = Blank Lines
LBL_SHOW_TEMPLATE_FOR = Show template for:
LBL_SINGLE_LINE = Single-line comments
LBL_SMART_MODE = Smart Mode:
LBL_SORTING = Sorting
LBL_SPACE_BEFORE = Space before:
LBL_STATIC_VARS = Static variables/initializers:
LBL_STRING = String:
LBL_THREADS_NUMBER = Number:
LBL_THREADS_PLURAL = Threads
LBL_THREADS_SINGULAR = Thread
LBL_TOP = Top:
LBL_TRAILING_INDENT = Trailing comment indent:
LBL_VALUE = Value:
LBL_VARIABLE = Variable:
LBL_VARIABLES = Variablen
LBL_VARS = Variables:
LBL_WARNINGS = Warnings
LBL_WHITESPACE = White Space
LBL_WRAPPING = Wrapping
LBL_XML_CONVENTION = XML Code Convention (*.xml)
MNE_CLOSE = &Close
MNE_FILE = &File
MNE_OPEN = &Open
MNE_REMOVE = Remove
MSG_ERROR_REMOVING_PROJECT = Could not remove the project.
MSG_INVALID_BOTTOM_FRAGMENT = Invalid text for "Bottom" fragment specified.\nValid fragments take the form "{0}"\n
MSG_INVALID_EXCEPTION_FRAGMENT = Invalid text for "Exception" fragment specified.\nValid fragments take the form "{0}"\n
MSG_INVALID_PARAMETER_FRAGMENT = Invalid text for "Parameter" fragment specified.\nValid fragments take the form "{0}"\n
MSG_INVALID_RETURN_FRAGMENT = Invalid text for "Return" fragment specified.\nValid fragments take the form "{0}"\n
MSG_INVALID_TAG_NAME = "{0}" is no valid tag name.\nValid names take the form "{1}"\n
MSG_INVALID_TEMPLATE = Invalid template specified.\nValid templates take the form "{0}"\n
MSG_INVALID_TOP_FRAGMENT = Invalid text for "Top" fragment specified.\nValid fragments take the form "{0}"\n
MSG_INVALID_VARIABLE = "{0}" is no valid variable name.\nValid names take the form "{1}"\n
MSG_MISSING_IDENTIFY_KEY = You have to specify at least one identify key in the "{0}" panel.
MSG_NOT_FIND_LAF = Could not find Look&Feel class -- {0}
MSG_PROJECT_EXISTS = A project with the given name already exists.\n
MSG_PROJECT_INVALID_DESC = Project description must be no longer than 256 characters!\n
MSG_PROJECT_INVALID_NAME = Invalid project name given: {0}
TAB_ALWAYS = Always
TAB_COMMENTS = Comments
TAB_CUSTOM_TAGS = Custom Tags
TAB_DECLARATIONS = Declarations
TAB_GENERAL = General
TAB_METHODS = Methods
TAB_MISC = Misc
TAB_MODIFIERS = Modifiers
TAB_OPTIONS = Options
TAB_SYSTEM = System
TAB_TEMPLATES = Templates
TAB_TEXT = Text
TAB_USER = User
TAB_VARS = Variables
TIP_ADHERE_TO_NAMING_CONVENTION = Adhere to generally accepted naming conventions
TIP_AVOID_THREAD_GROUPS = Avoid thread groups
TIP_AVOID_VARIABLE_SHADOWING  = Avoid variable shadowing
TIP_DECLARE_COLLECTION_COMMENT = Document collection tpyes
TIP_DONT_IGNORE_EXCEPTION = Don't ignore exceptions
TIP_DONT_SUBSTITUTE_OBJECT_EQUALS  = Don't substitute another type for Object in the equals declaration
TIP_EMPTY_FINALLY = Avoid empty finally blocks
TIP_INTERFACE_ONLY_FOR_TYPE = Use interfaces only to define types
TIP_NEVER_THROW_EXCEPTION = Never declare that a method "throws Exception"
TIP_NEVER_THROW_THROWABLE = Never declare that a method "throws Throwable"
TIP_NEVER_WAIT_OUTSIDE_LOOP = Never invoke wait outside a loop
TIP_OBEY_CONTRACT_EQUALS =  Obey the general contract when overriding equals
TIP_OVERRIDE_EQUALS = Always override equals when you override hashCode
TIP_OVERRIDE_HASHCODE =  Always override hashCode when you override equals
TIP_OVERRIDE_TO_STRING = Always override toString
TIP_REFER_BY_INTERFACE = Refer to objects by their interfaces
TIP_REPLACE_STRUCTURE_WITH_CLASS = Replace structures with classes
TIP_RETURN_ZERO_ARRAY = Return zero-length arrays, not nulls
TIP_STRING_LITERAL_I18N = Add NOI18N comment for String literals
TIP_WRONG_COLLECTION_COMMENT = Adhere to naming convention for collection types
TLE_ADD_IDENTIFY_KEY = Add new identify key
TLE_ADD_NEW_INLINE = Add new In-line Tag
TLE_ADD_NEW_STANDARD = Add new Standard tag
TLE_ADD_NEW_VARIABLE = Add new environment variable
TLE_ADD_PROJECT = Add new project
TLE_ERROR_REMOVING_PROJECT = Error: Project removal failed
TLE_EXPORT_CODE_CONVENTION = Export Code Convention
TLE_HISTORY = History
TLE_HISTORY_VIEWER = History Viewer
TLE_IMPORT_CODE_CONVENTION = Import Code Convention
TLE_INVALID_BOTTOM_FRAGMENT = Error: Invalid Bottom fragment
TLE_INVALID_EXCEPTION_FRAGMENT = Error: Invalid Exception fragment
TLE_INVALID_PARAMETER_FRAGMENT = Error: Invalid Parameter fragment
TLE_INVALID_RETURN_FRAGMENT = Error: Invalid Return fragment
TLE_INVALID_TAG_NAME = Error: Invalid tag name
TLE_INVALID_TEMPLATE = Error: Invalid template
TLE_INVALID_TOP_FRAGMENT = Error: Invalid Top fragment
TLE_INVALID_VARIABLE = Error: Invalid variable name
TLE_JALOPY_SETTINGS = Jalopy Settings
TLE_MISSING_IDENTIFY_KEY = Error: Key missing
TLE_OPEN_JAVA_FILE = Open Java source file
TLE_PREVIEW = Preview
TLE_PROJECT_EXISTS = Error: Project already exists
TLE_PROJECT_INVALID_DESC = Error: Project description too long
TLE_PROJECT_INVALID_NAME = Error: Invalid project name
TLE_REGEXP_TESTER = Regular expression tester
TLE_SELECT_BACKUP_DIRECTORY = Select backup directory
