// $ANTLR 2.7.2a2 (20020112-1): "main/src/java/de/hunsicker/jalopy/language/java.g" -> "JavaLexer.java"$

package de.hunsicker.jalopy.language;

/**
 * Token type constants for the Java recognizer.
 *
 * <p>This is an <a href="http://www.antlr.org/">ANTLR</a> automated generated
 * file. <strong>DO NOT EDIT</strong> but rather change the associated grammar and rebuild.</p>
 */
public final class JavaTokenTypes {
private JavaTokenTypes(){}
	public final static 	int EOF = 1;
	public final static 	int NULL_TREE_LOOKAHEAD = 3;
	public final static 	int JAVADOC_COMMENT = 6;
	public final static 	int LCURLY = 7;
	public final static 	int RCURLY = 8;
	public final static 	int MODIFIERS = 9;
	public final static 	int OBJBLOCK = 10;
	public final static 	int SLIST = 11;
	public final static 	int CTOR_DEF = 12;
	public final static 	int METHOD_DEF = 13;
	public final static 	int VARIABLE_DEF = 14;
	public final static 	int INSTANCE_INIT = 15;
	public final static 	int STATIC_INIT = 16;
	public final static 	int TYPE = 17;
	public final static 	int CLASS_DEF = 18;
	public final static 	int INTERFACE_DEF = 19;
	public final static 	int PACKAGE_DEF = 20;
	public final static 	int ARRAY_DECLARATOR = 21;
	public final static 	int EXTENDS_CLAUSE = 22;
	public final static 	int IMPLEMENTS_CLAUSE = 23;
	public final static 	int PARAMETERS = 24;
	public final static 	int PARAMETER_DEF = 25;
	public final static 	int LABELED_STAT = 26;
	public final static 	int TYPECAST = 27;
	public final static 	int INDEX_OP = 28;
	public final static 	int POST_INC = 29;
	public final static 	int POST_DEC = 30;
	public final static 	int METHOD_CALL = 31;
	public final static 	int EXPR = 32;
	public final static 	int ARRAY_INIT = 33;
	public final static 	int IMPORT = 34;
	public final static 	int UNARY_MINUS = 35;
	public final static 	int UNARY_PLUS = 36;
	public final static 	int CASE_GROUP = 37;
	public final static 	int ELIST = 38;
	public final static 	int FOR_INIT = 39;
	public final static 	int FOR_CONDITION = 40;
	public final static 	int FOR_ITERATOR = 41;
	public final static 	int EMPTY_STAT = 42;
	public final static 	int FINAL = 43;
	public final static 	int ABSTRACT = 44;
	public final static 	int STRICTFP = 45;
	public final static 	int SUPER_CTOR_CALL = 46;
	public final static 	int CTOR_CALL = 47;
	public final static 	int BOF = 48;
	public final static 	int ROOT = 49;
	public final static 	int CASESLIST = 50;
	public final static 	int BLOCK_STATEMENT = 51;
	public final static 	int SEPARATOR_COMMENT = 52;
	public final static 	int SYNBLOCK = 53;
	public final static 	int LITERAL_package = 54;
	public final static 	int SEMI = 55;
	public final static 	int LITERAL_import = 56;
	public final static 	int LBRACK = 57;
	public final static 	int RBRACK = 58;
	public final static 	int LITERAL_void = 59;
	public final static 	int LITERAL_boolean = 60;
	public final static 	int LITERAL_byte = 61;
	public final static 	int LITERAL_char = 62;
	public final static 	int LITERAL_short = 63;
	public final static 	int LITERAL_int = 64;
	public final static 	int LITERAL_float = 65;
	public final static 	int LITERAL_long = 66;
	public final static 	int LITERAL_double = 67;
	public final static 	int IDENT = 68;
	public final static 	int DOT = 69;
	public final static 	int STAR = 70;
	public final static 	int LITERAL_private = 71;
	public final static 	int LITERAL_public = 72;
	public final static 	int LITERAL_protected = 73;
	public final static 	int LITERAL_static = 74;
	public final static 	int LITERAL_transient = 75;
	public final static 	int LITERAL_native = 76;
	public final static 	int LITERAL_synchronized = 77;
	public final static 	int LITERAL_volatile = 78;
	public final static 	int LITERAL_class = 79;
	public final static 	int LITERAL_extends = 80;
	public final static 	int LITERAL_interface = 81;
	public final static 	int COMMA = 82;
	public final static 	int LITERAL_implements = 83;
	public final static 	int LPAREN = 84;
	public final static 	int RPAREN = 85;
	public final static 	int LITERAL_this = 86;
	public final static 	int LITERAL_super = 87;
	public final static 	int STR_supper = 88;
	public final static 	int ASSIGN = 89;
	public final static 	int LITERAL_throws = 90;
	public final static 	int COLON = 91;
	public final static 	int LITERAL_if = 92;
	public final static 	int LITERAL_else = 93;
	public final static 	int LITERAL_for = 94;
	public final static 	int LITERAL_while = 95;
	public final static 	int LITERAL_do = 96;
	public final static 	int LITERAL_break = 97;
	public final static 	int LITERAL_assert = 98;
	public final static 	int LITERAL_continue = 99;
	public final static 	int LITERAL_return = 100;
	public final static 	int LITERAL_switch = 101;
	public final static 	int LITERAL_throw = 102;
	public final static 	int LITERAL_case = 103;
	public final static 	int LITERAL_default = 104;
	public final static 	int LITERAL_try = 105;
	public final static 	int LITERAL_catch = 106;
	public final static 	int LITERAL_finally = 107;
	public final static 	int PLUS_ASSIGN = 108;
	public final static 	int MINUS_ASSIGN = 109;
	public final static 	int STAR_ASSIGN = 110;
	public final static 	int DIV_ASSIGN = 111;
	public final static 	int MOD_ASSIGN = 112;
	public final static 	int SR_ASSIGN = 113;
	public final static 	int BSR_ASSIGN = 114;
	public final static 	int SL_ASSIGN = 115;
	public final static 	int BAND_ASSIGN = 116;
	public final static 	int BXOR_ASSIGN = 117;
	public final static 	int BOR_ASSIGN = 118;
	public final static 	int QUESTION = 119;
	public final static 	int LOR = 120;
	public final static 	int LAND = 121;
	public final static 	int BOR = 122;
	public final static 	int BXOR = 123;
	public final static 	int BAND = 124;
	public final static 	int NOT_EQUAL = 125;
	public final static 	int EQUAL = 126;
	public final static 	int LT = 127;
	public final static 	int GT = 128;
	public final static 	int LE = 129;
	public final static 	int GE = 130;
	public final static 	int LITERAL_instanceof = 131;
	public final static 	int SL = 132;
	public final static 	int SR = 133;
	public final static 	int BSR = 134;
	public final static 	int PLUS = 135;
	public final static 	int MINUS = 136;
	public final static 	int DIV = 137;
	public final static 	int MOD = 138;
	public final static 	int INC = 139;
	public final static 	int DEC = 140;
	public final static 	int BNOT = 141;
	public final static 	int LNOT = 142;
	public final static 	int LITERAL_true = 143;
	public final static 	int LITERAL_false = 144;
	public final static 	int LITERAL_null = 145;
	public final static 	int LITERAL_new = 146;
	public final static 	int NUM_INT = 147;
	public final static 	int CHAR_LITERAL = 148;
	public final static 	int STRING_LITERAL = 149;
	public final static 	int NUM_FLOAT = 150;
	public final static 	int NUM_LONG = 151;
	public final static 	int NUM_DOUBLE = 152;
	public final static 	int WS = 153;
	public final static 	int SPECIAL_COMMENT = 154;
	public final static 	int SL_COMMENT = 155;
	public final static 	int COMMENT = 156;
	public final static 	int ML_COMMENT = 157;
	public final static 	int ESC = 158;
	public final static 	int HEX_DIGIT = 159;
	public final static 	int VOCAB = 160;
	public final static 	int EXPONENT = 161;
	public final static 	int FLOAT_SUFFIX = 162;
}
